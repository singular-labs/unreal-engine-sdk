<root xmlns:android="http://schemas.android.com/apk/res/android">
    <buildGradleAdditions>
        <insert>
allprojects {
    repositories {
        maven { url 'http://maven.singular.net/' }
    }
}
dependencies {
    implementation 'com.singular.sdk:singular_sdk:9.+'
}
        </insert>
    </buildGradleAdditions>
    <androidManifestUpdates>
        <addPermission android:name="android.permission.INTERNET" />
        <addPermission android:name="android.permission.ACCESS_NETWORK_STATE" />
        <addPermission android:name="BIND_GET_INSTALL_REFERRER_SERVICE" />
    </androidManifestUpdates>
    <gameActivityImportAdditions>
        <insert>
    import android.app.Application;
    import com.singular.sdk.*;
        </insert>
    </gameActivityImportAdditions>
    <gameActivityClassAdditions>
        <insert>

    // Singular Fields

    private String singularApiKey;
    private String singularApiSecret;
    private Intent singularCurrentIntent;

    // Singular Initialization Methods

    public void setSingularWrapper(String wrapperName, String version) {
        Singular.setWrapperNameAndVersion(wrapperName, version);
    }

    public void setSingularData(String key, String secret) {
        singularApiKey = key;
        singularApiSecret = secret;

        initSingular();
    }

    public void initSingular() {
        if (singularApiKey == null || singularApiSecret == null) {
            return;
        }

        SingularConfig config = new SingularConfig(singularApiKey, singularApiSecret);

        if (singularCurrentIntent != null) {
            // TODO: singular links
            singularCurrentIntent = null;
        }

        Singular.init(getApplicationContext(), config);
    }

    // Singular Events Methods

    public void singularEvent(String eventName) {
        Singular.event(eventName);
    }

    public void singularEventWithArgs(String eventName, Map&lt;String, Object&gt; args) {
        Singular.eventJSON(eventName, new JSONObject(args));
    }

    public void singularRevenue(String eventName, String currency, double amount, Map&lt;String, Object&gt; attributes) {
        Singular.customRevenue(eventName, currency, amount, attributes);
    }

    // Singular Custom User Id Methods

    public void singularSetCustomUserId(String customUserId) {
        Singular.setCustomUserId(customUserId);
    }

    public void singularUnsetCustomUserId() {
        Singular.unsetCustomUserId();
    }

    // Singular Uninstall Tracking Methods

    public void singularSetUninstallToken(String token) {
        Singular.setFCMDeviceToken(token);
    }

    // Singular GDPR Methods

    public void singularTrackingOptIn() {
        Singular.trackingOptIn();
    }

    public void singularTrackingUnder13() {
        Singular.trackingUnder13();
    }

    public void singularStopAllTracking() {
        Singular.stopAllTracking();
    }

    public void singularResumeAllTracking() {
        Singular.resumeAllTracking();
    }

    public boolean singularIsAllTrackingStopped() {
        return Singular.isAllTrackingStopped();
    }

    // Singular CCPA Methods

    public void singularLimitDataSharing(boolean shouldLimitDataSharing) {
        Singular.limitDataSharing(shouldLimitDataSharing);
    }

    public boolean singularGetLimitDataSharing() {
        return Singular.getLimitDataSharing();
    }

        </insert>
    </gameActivityClassAdditions>
    <gameActivityOnCreateAdditions>
        <insert>
        singularCurrentIntent = getIntent();
        initSingular();
        </insert>
    </gameActivityOnCreateAdditions>
</root>
